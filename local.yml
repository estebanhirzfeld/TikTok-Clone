version: "3.9"

services:

    elastic-search:
        image: elasticsearch:7.17.9
        environment:
            - discovery.type=single-node
        ports:
            - "9200:9200"
        networks:
            - tiktok-clone-api

    django:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        volumes:
            - .:/app:z
            - static_volume:/app/staticfiles
            - media_volume:/app/mediafiles
        expose:
            - "8000"
        env_file:
            - ./.envs/.local/.django
            - ./.envs/.local/.postgres
        depends_on:
            - postgres
            - mailhog
            - redis
            - elastic-search
        command: /start
        networks:
            - tiktok-clone-api

    postgres:
        build:
            context: .
            dockerfile: ./docker/local/postgres/Dockerfile
        volumes:
            - local_postgres_data:/var/lib/postgresql/data
            - local_postgres_data_backups:/backups
        env_file:
            - ./.envs/.local/.postgres
        networks:
            - tiktok-clone-api

    nextjs:
        build:
            context: ./frontend
            dockerfile: ./Dockerfile
        # volumes:
        #     - ./frontend:/frontend_app
        ports:
            - "3000:3000"
        networks:
            - tiktok-clone-api

    nginx:
        restart: always
        build:
            context: ./docker/local/nginx/
            dockerfile: Dockerfile
        volumes:
            - static_volume:/app/staticfiles
            - media_volume:/app/mediafiles
        ports:
            - "8080:80"
        depends_on:
            - django
            - nextjs
        env_file:
            - ./.envs/.local/.django  
        networks:
            - tiktok-clone-api

    mailhog:
        image: mailhog/mailhog:v1.0.0
        container_name: mailhog
        ports:
            - "8025:8025"
        volumes:
            - mailhog_data:/data
        networks:
            - tiktok-clone-api
    
    redis:
        image: redis:7-alpine
        networks:
            - tiktok-clone-api

    celery:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        command: /start-celeryworker
        volumes:
            - .:/app
        env_file:
            - ./.envs/.local/.django
            - ./.envs/.local/.postgres
        depends_on:
            - redis
            - postgres
            - mailhog
        networks:
            - tiktok-clone-api
    
    flower:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        command: /start-flower
        volumes:
            - flower_data:/flower
        env_file:
            - ./.envs/.local/.django
            - ./.envs/.local/.postgres
        ports:
            - "5555:5555"
        depends_on:
            - redis
            - postgres
        networks:
            - tiktok-clone-api

# TODO: Change "Core"
networks:
    tiktok-clone-api:
        driver: bridge

volumes:
    static_volume:
    media_volume:
    local_postgres_data: {}
    local_postgres_data_backups: {}
    flower_data: {}
    mailhog_data: {}